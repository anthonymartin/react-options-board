{"version":3,"sources":["components/ContractCell/ContractCell.module.css","components/ContractCell/ContractCell.tsx"],"names":["module","exports","inject","observer","props","num","OI","key","className","styles","openInterest","parseInt","contract","open_interest","Math","abs","sign","toFixed","bidAsk","Fragment","classnames","bidAskCell","bid","price","booktops","ask","React","useState","backgroundColor","setBackgroundColor","updateTimer","useRef","useEffect","current","clearTimeout","type","window","setTimeout","store","toJS","UIStore","onClick","e","focusedContract","id","style","colSpan","ContractCell","active","data-testid","cellContainer","contractWrapper","flipOI"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,OAAS,6BAA6B,cAAgB,oCAAoC,gBAAkB,sCAAsC,aAAe,mCAAmC,WAAa,iCAAiC,IAAM,0BAA0B,IAAM,0BAA0B,OAAS,+B,2ICsEhXC,sBAAO,UAAPA,CAAkBC,aA1DiB,SAACC,GAAW,IAAD,IAJzCC,EAMZC,EAAK,kBAAC,UAAD,CAAeC,IAAK,EAAGC,UAAWC,IAAOC,cACjDC,SAASP,EAAMQ,SAASC,gBAPTR,EAOqCM,SAASP,EAAMQ,SAASC,eANxEC,KAAKC,IAAIV,GAAO,IAAMS,KAAKE,KAAKX,IAAOS,KAAKC,IAAIV,GAAK,KAAMY,QAAQ,GAAa,IAAMH,KAAKE,KAAKX,GAAKS,KAAKC,IAAIV,IAMpB,KAG3Fa,EAAS,kBAAC,IAAMC,SAAP,CAAgBZ,IAAK,GAClC,kBAAC,UAAD,CAAeC,UAAWY,IAAWX,IAAOY,WAAYZ,IAAOa,KAAMC,MAAOnB,EAAMQ,SAASY,SAAS,GAAGF,MACvG,kBAAC,UAAD,CAAed,UAAWY,IAAWX,IAAOY,WAAYZ,IAAOgB,KAAMF,MAAOnB,EAAMQ,SAASY,SAAS,GAAGC,OAR9C,EAWbC,IAAMC,SAAS,WAXF,mBAWpDC,EAXoD,KAWnCC,EAXmC,KAYrDC,EAAcJ,IAAMK,SAE1BC,qBAAU,WACR,OAAO,WACDF,EAAYG,SACdC,aAAaJ,EAAYG,YAG5B,IAEHD,qBAAU,WAUJF,EAAYG,UAPdJ,EAA2C,QAAxBzB,EAAMQ,SAASuB,KAAiB,YAAc,aACjEL,EAAYG,QAAUG,OAAOC,YAAW,WACtCR,EAAmB,IACnBC,EAAYG,QAAU,OACrB,QAOJ,CAAC7B,EAAMQ,SAASuB,KAAM/B,EAAMQ,SAASY,SAAS,GAAGF,IAAKlB,EAAMQ,SAASY,SAAS,GAAGC,MAMpF,IAAMa,EAAQC,YAAKC,KAEnB,OACE,wBAAIC,QAPN,SAAqBC,GACnBF,IAAQG,gBAAkBvC,EAAMQ,SAASgC,IAMfC,MAAO,CAACjB,mBAAkBrB,IAAKH,EAAMQ,SAASgC,GAAK,IAAMxC,EAAMQ,SAASuB,KAAMW,QAAS,EAAGtC,UAAWY,KAAU,mBACtIX,IAAOsC,cAAe,GADgH,cAEtItC,IAAOuC,OAASV,GAASA,EAAMK,kBAAoBvC,EAAMQ,SAASgC,IAFoE,IAGnIK,cAAY,gBACd,yBAAKzC,UAAWY,IAAW,CAACX,IAAOyC,cAAe,mBAChD,yBAAK1C,UAAWY,KAAU,mBAAGX,IAAO0C,iBAAkB,GAA5B,cAAmC1C,IAAO2C,OAAShD,EAAMgD,QAAzD,KACtBhD,EAAMgD,OAAwB,CAAClC,EAAQZ,GAAxB,CAACA,EAAIY","file":"static/js/3.dc8324d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContractCell\":\"ContractCell_ContractCell__3rQIS\",\"active\":\"ContractCell_active__31U9y\",\"cellContainer\":\"ContractCell_cellContainer__Y71J5\",\"contractWrapper\":\"ContractCell_contractWrapper__3Xl-g\",\"openInterest\":\"ContractCell_openInterest__2ciBc\",\"bidAskCell\":\"ContractCell_bidAskCell__2PP67\",\"bid\":\"ContractCell_bid__1msh5\",\"ask\":\"ContractCell_ask__3XTdR\",\"flipOI\":\"ContractCell_flipOI__13kfn\"};","import React, { useEffect } from 'react';\nimport classnames from 'classnames';\nimport styles from './ContractCell.module.css';\nimport CurrencyLabel from '../CurrencyLabel/CurrencyLabel';\nimport { ContractCellProps } from './ContractCell.lazy';\nimport UIStore from '../../stores/UIStore';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\n\nfunction kFormatter(num: number) {\n  return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1) as any) + 'k' : Math.sign(num)*Math.abs(num)\n}\n\nconst ContractCell: React.FC<ContractCellProps> = (props) => {\n\n  const OI =(<CurrencyLabel key={0} className={styles.openInterest}>\n    {parseInt(props.contract.open_interest) ? kFormatter(parseInt(props.contract.open_interest)) : '-'}\n  </CurrencyLabel>)\n  \n  const bidAsk = <React.Fragment key={1}>\n    <CurrencyLabel className={classnames(styles.bidAskCell, styles.bid)} price={props.contract.booktops[0].bid} />\n    <CurrencyLabel className={classnames(styles.bidAskCell, styles.ask)} price={props.contract.booktops[0].ask} />\n  </React.Fragment>\n\n  const [backgroundColor, setBackgroundColor] = React.useState(\"inherit\");\n  const updateTimer = React.useRef<number | null>();\n\n  useEffect(()=> {\n    return () => {\n      if (updateTimer.current) {\n        clearTimeout(updateTimer.current);\n    }\n    };\n  }, []);\n\n  useEffect(() => {\n\n    function setUpdate() {\n      setBackgroundColor(props.contract.type === 'put' ? \"#00ff4930\" : \"#ff000021\");\n      updateTimer.current = window.setTimeout(() => {\n        setBackgroundColor(\"\");\n        updateTimer.current = null;\n      }, 300);\n    }\n    \n    if(!updateTimer.current) {\n      setUpdate();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.contract.type, props.contract.booktops[0].bid, props.contract.booktops[0].ask]);\n  \n  function handleClick(e: any) {\n    UIStore.focusedContract = props.contract.id;\n  }\n\n  const store = toJS(UIStore)\n\n  return (\n    <td onClick={handleClick} style={{backgroundColor}} key={props.contract.id + '-' + props.contract.type} colSpan={3} className={classnames({\n      [styles.ContractCell]: true,\n      [styles.active]: store && store.focusedContract === props.contract.id,\n      })} data-testid=\"ContractCell\">\n        <div className={classnames([styles.cellContainer, 'cellContainer'])}>\n          <div className={classnames({[styles.contractWrapper]: true, [styles.flipOI]: props.flipOI})}>\n            {!props.flipOI ? [OI, bidAsk] : [bidAsk, OI]}\n          </div>\n        </div>\n    </td>\n  )\n};\n\nexport default inject('UIStore')(observer(ContractCell));\n"],"sourceRoot":""}