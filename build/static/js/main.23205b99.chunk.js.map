{"version":3,"sources":["stores/UIStore.ts","components/OptionsBoard/OptionsBoard.module.css","components/OptionsBoardTableBody/OptionsBoardTableBody.module.css","components/OptionsBoardTableHead/OptionsBoardTableHead.module.css","components/CurrencyLabel/CurrencyLabel.lazy.tsx","components/OptionRow/OptionRow.module.css","components/ContractCell/ContractCell.lazy.tsx","components/OptionRow/OptionRow.tsx","components/StrikePriceChart/StrikePriceChart.module.css","App.module.css","components/CurrencyLabel/CurrencyLabel.tsx","components/OptionRow/OptionRow.lazy.tsx","components/OptionsBoardPriceRow/OptionsBoardPriceRow.lazy.tsx","components/OptionsBoardTableBody/OptionsBoardTableBody.tsx","components/OptionsBoardTableHead/OptionsBoardTableHead.tsx","components/Header/Header.lazy.tsx","stores/ContractsStore.ts","components/OptionsBoard/OptionsBoard.tsx","components/StrikePriceChart/StrikePriceChart.tsx","hooks/useWindowResize.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["UIStore","observable","module","exports","LazyCurrencyLabel","lazy","CurrencyLabel","props","fallback","LazyContractCell","ContractCell","strikeFormatter","Intl","NumberFormat","formatStrike","num","format","OptionRow","put","call","className","styles","key","id","contract","strikePrice","strike_price","flipOI","currencyFormatter","minimumFractionDigits","React","memo","content","price","toFixed","children","LazyOptionRow","LazyOptionsBoardPriceRow","OptionsBoardPriceRow","treatAsUTC","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","daysBetween","startDate","endDate","OptionsBoardDateRow","classnames","rowDate","dateHeader","colSpan","toLocaleDateString","Math","round","OptionsBoardTableBody","bitcoinPrice","bitcoin","ask","bid","contracts","Object","entries","map","dateContracts","contractRows","index","Fragment","length","OptionsBoardTableHead","columnLabels","sticky","oiHeader","bidAskColumnHeader","strikeHeader","LazyHeader","Header","socket","io","inject","observer","useEffect","fetch","toISOString","then","resp","json","optionsContracts","optionsDictionary","nextDayContracts","activeNextDayContract","ContractsStore","catch","err","on","payload","booktop","JSON","parse","datetime","now","contract_id","a","b","c","booktops","unshift","emit","bitcoinHeader","useMemo","putCallHeader","keys","boardWrapper","OptionsBoard","data-testid","tableWrapper","DarkUnica","Highcharts","size","isClient","window","getSize","useCallback","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","wrapperRef","useRef","chart","setChart","current","wrapperSize","setTimeout","setSize","scrollWidth","scrollHeight","focusedId","focusedContract","options","title","text","style","color","font","xAxis","type","labels","formatter","value","legend","enabled","yAxis","tooltip","a1","a2","a3","this","point","x","series","name","y","zoomType","credits","step","data","StrikePriceChart","chartDetail","charAt","toUpperCase","slice","date_expires","cellAsk","cellMidpoint","cellBid","cellOI","open_interest","parseInt","ref","flex","overflow","position","highcharts","allowChartUpdate","containerProps","callback","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"+KAEaA,GAAb,4HACKC,KADL,yEACiD,QADjD,GAIe,QAAID,G,mBCLnBE,EAAOC,QAAU,CAAC,aAAe,mCAAmC,aAAe,mCAAmC,aAAe,mCAAmC,aAAe,mCAAmC,WAAa,iCAAiC,QAAU,8BAA8B,mBAAqB,yCAAyC,SAAW,iC,mBCAzXD,EAAOC,QAAU,CAAC,sBAAwB,qDAAqD,WAAa,4C,kBCA5GD,EAAOC,QAAU,CAAC,sBAAwB,qDAAqD,OAAS,sCAAsC,aAAe,4CAA4C,SAAW,0C,gCCDpN,oBAEMC,EAAoBC,gBAAK,kBAAM,0CActBC,IANO,SAACC,GAAD,OACpB,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAACJ,EAAsBG,M,mBCX3BL,EAAOC,QAAU,CAAC,YAAc,iC,yHCE1BM,EAAmBJ,gBAAK,kBAAM,iCAUrBK,EANM,SAACH,GAAD,OACnB,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAACC,EAAqBF,KCJpBI,EAAkB,IAAIC,KAAKC,aAAa,SAEvC,SAASC,EAAaC,GAC3B,OAAOJ,EAAgBK,OAAOD,EAAI,KAWrBE,UAR6B,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAKC,EAAP,EAAOA,KAAP,OAC1C,wBAAIC,UAAWC,IAAOJ,UAAWK,IAAKJ,EAAIK,IACxC,kBAAC,EAAD,CAAcD,IAAK,EAAGE,SAAUN,IAChC,wBAAIE,UAAWC,IAAOI,aAAcX,EAAaI,EAAIQ,eACrD,kBAAC,EAAD,CAAcJ,IAAK,EAAGE,SAAUL,EAAMQ,QAAQ,O,kBCdlDzB,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,aAAe,uCAAuC,YAAc,sCAAsC,QAAU,kCAAkC,aAAe,uCAAuC,QAAU,kCAAkC,OAAS,mC,mBCAjVD,EAAOC,QAAU,CAAC,GAAK,gBAAgB,GAAK,gBAAgB,GAAK,gBAAgB,GAAK,gBAAgB,GAAK,gBAAgB,GAAK,gBAAgB,IAAM,mB,wFCDtJ,6EAGayB,EAAoB,IAAIhB,KAAKC,aAAa,QAAS,CAC9DgB,sBAAuB,IAsBVC,cAAMC,MAf+B,SAACxB,GACnD,IAAIyB,EALkBjB,EActB,OAPGR,EAAM0B,QAPalB,EAQKR,EAAM0B,MAAM,IAArCD,EAPKJ,EAAkBZ,OAAOD,EAAImB,QAAQ,KASzC3B,EAAM4B,WACPH,EAAUzB,EAAM4B,UAIhB,0BAAMf,UAAWb,EAAMa,WAAYY,GAAW,S,4NCnB5CI,EAAgB/B,gBAAK,kBAAM,2CAclBY,EANG,SAACV,GAAD,OAChB,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAAC4B,EAAkB7B,KCXjB8B,EAA2BhC,gBAAK,kBAAM,iCAQ7BiC,EANc,SAAC/B,GAAD,OAC3B,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAAC6B,EAA6B9B,KCClC,SAASgC,EAAWC,GAClB,IAAIC,EAAS,IAAIC,KAAKF,GAEtB,OADAC,EAAOE,WAAWF,EAAOG,aAAeH,EAAOI,qBACxCJ,EAGF,SAASK,EAAYC,EAAiBC,GAE3C,OAAST,EAAWS,GAAkCT,EAAWQ,IADxC,MAI3B,I,UAAME,EAAgDnB,IAAMC,MAAK,SAACxB,GAChE,OACE,wBAAIa,UAAW8B,IAAW7B,IAAO8B,QAAS9B,IAAO+B,aAC/C,wBAAIC,QAAS,GACX,6BACA,8BAAM,gCAAS,IAAIX,KAAKnC,EAAMiC,MAAMc,mBAAmB,WADvD,MACmF,8BAAOC,KAAKC,MAAMV,EAAY,IAAIJ,KAAQ,IAAIA,KAAKnC,EAAMiC,QAAzD,oBA2C5EiB,EApCoD,SAAClD,GAElE,IAAMmD,GAAgBnD,EAAMoD,QAAQC,IAAMrD,EAAMoD,QAAQE,KAAK,EAG7D,OACE,2BAAOzC,UAAWC,IAAOoC,uBACtBlD,EAAMuD,WAAaC,OAAOC,QAAQzD,EAAMuD,WAAWG,KAAI,YAA4B,IAAD,mBAAzBzB,EAAyB,KAAnB0B,EAAmB,KAC7EC,EAAeD,EAAcD,KAAI,WAAcG,GAAd,uBAAElD,EAAF,KAAOC,EAAP,YACrC,kBAAC,IAAMkD,SAAP,CAAgB/C,IAAKJ,EAAIK,KAEnB6C,EAAQ,GACN7D,EAAMoD,QAAQC,KAAOrD,EAAMoD,QAAQE,KACpC3C,EAAIQ,aAAegC,GACnBQ,EAAcE,EAAM,GAAG,GAAG1C,aAAegC,GAEjC,IAAVU,GAAelD,EAAIQ,aAAegC,IAC/BnD,EAAMoD,QAAQC,KAAOrD,EAAMoD,QAAQE,KAAQ,kBAAC,EAAD,CAAsBvC,IAAKkB,EAAMkB,aAAcA,IAEhG,kBAAC,EAAD,eAAWpC,IAAKJ,EAAIK,IAAQ,CAACL,MAAKC,UAE/BiD,IAAUF,EAAcI,QAAUpD,EAAIQ,aAAegC,GACjD,kBAAC,EAAD,CAAsBpC,IAAKkB,EAAMkB,aAAcA,QAM5D,OAAQ,kBAAC,IAAMW,SAAP,CAAgB/C,IAAKkB,GACzB,kBAACS,EAAD,CAAqBT,KAAMA,IAC1B2B,Q,wBCnCOrC,MAAMC,MArBkB,WAAO,IAAD,EAE5C,OACE,2BAAOX,UAAW8B,KAAU,mBACzB7B,IAAOkD,uBAAwB,GADN,cAEzBlD,IAAOmD,cAAe,GAFG,cAGvBnD,IAAOoD,QAAS,GAHO,KAK1B,4BACE,wBAAIrD,UAAWC,IAAOqD,UAAU,qCAChC,wBAAItD,UAAWC,IAAOsD,oBAAtB,OACA,wBAAIvD,UAAWC,IAAOsD,oBAAtB,OACA,wBAAIvD,UAAWC,IAAOuD,cAAtB,UACA,wBAAIxD,UAAWC,IAAOsD,oBAAtB,OACA,wBAAIvD,UAAWC,IAAOsD,oBAAtB,OACA,wBAAIvD,UAAWC,IAAOqD,UAAU,0CCjBlCG,EAAaxE,gBAAK,kBAAM,iCAQfyE,EANA,SAACvE,GAAD,OACb,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAACqE,EAAetE,K,sCCKL,MAPf,wQACKN,KADL,wEACkD,MADlD,+CAEKA,KAFL,wEAE6D,MAF7D,8CAGKA,KAHL,wEAGyD,MAHzD,mDAIKA,KAJL,yEAIyD,QAJzD,G,OCSM8E,EAASC,IAAG,IA6HHC,cAAO,iBAAPA,CAAyBC,aAhFU,SAAC3E,GAEjD4E,qBAAU,WACRC,MAAM,+CAAD,QAAgD,IAAI1C,MAAO2C,gBAC3DC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,YAAqF,IAAnFG,EAAkF,EAAlFA,iBAAkBC,EAAgE,EAAhEA,kBAAmBC,EAA6C,EAA7CA,iBAAkBC,EAA2B,EAA3BA,sBAC3DC,EAAeJ,iBAAmBA,EAClCI,EAAeH,kBAAoBA,EACnCG,EAAeF,iBAAmBA,EAClCE,EAAeD,sBAAwBA,KAExCE,OAAM,SAAAC,SAEZ,IAEHZ,qBAAU,WAuBR,OArBAJ,EAAOiB,GAAG,WAAW,SAACC,GAEpB,IAAMC,EAAUC,KAAKC,MAAMH,GAE3B,GAAIJ,EAAeH,mBAAsBG,EAAeJ,iBAAxD,CAMA,GAFAS,EAAQG,SAAW3D,KAAK4D,MAErBT,EAAeJ,kBAAoBI,EAAeH,kBAAkBQ,EAAQK,aAAc,CAAC,IAAD,cACzEV,EAAeH,kBAAkBQ,EAAQK,aADgC,GACpFC,EADoF,KACjFC,EADiF,KAC9EC,EAD8E,KAE3Fb,EAAeJ,iBAAiBe,GAAGC,GAAGC,GAAGC,SAASC,QAAQV,GAGzDL,EAAeD,uBAAyBC,EAAeD,uBAAyBC,EAAeD,sBAAsBrE,KAAO2E,EAAQK,aAErIV,EAAeD,sBAAsBe,SAASC,QAAQV,OAInD,WACLnB,EAAO8B,KAAK,iBAIb,IAGH,IAAMC,EAAgBC,mBAAQ,WAC5B,OACE,kBAAC,EAAD,KACE,gDAGH,IAGGC,EAAgBD,mBAAQ,WAC5B,OACE,kBAAC,EAAD,KACE,4CACA,8CAGH,IAEH,OAAOlB,GAAkBA,EAAeD,uBAAyBC,EAAeJ,kBAAoB1B,OAAOkD,KAAKpB,EAAeJ,kBAAkBnB,OAAS,yBAAKlD,UAAWC,IAAO6F,cAC/K,yBAAK9F,UAAWC,IAAO8F,aAAcC,cAAY,gBAC9CN,EACD,yBAAK1F,UAAWC,IAAOqC,cACrB,kBAAC,IAAD,CAAezB,MAAQ4D,EAAeD,uBAAyBC,EAAeD,sBAAsBe,SAAS,GAAG9C,KAAQ,IAD1H,MACkI,kBAAC,IAAD,CAAe5B,MAAQ4D,EAAeD,uBAAyBC,EAAeD,sBAAsBe,SAAS,GAAG/C,KAAQ,KAEzPoD,EACD,yBAAK5F,UAAWC,IAAOgG,cACrB,+BACE,kBAAC,EAAD,MACCtD,OAAOkD,KAAKpB,EAAeJ,kBAAkBnB,QAAU,kBAAC,EAAD,CAAuBR,UAAW+B,EAAeJ,iBAAkB9B,QAASkC,EAAeD,sBAAsBe,SAAS,SAIjL,kC,6GCvHXW,KAAUC,KAUV,IAyJetC,eAAO,UAAW,iBAAlBA,CAAoCC,aAtJhB,WACjC,IAAMsC,EC1BD,WACH,IAAMC,EAA6B,kBAAXC,OAElBC,EAAUC,uBAAY,WAC1B,MAAO,CACLC,MAAOJ,EAAWC,OAAOI,gBAAaC,EACtCC,OAAQP,EAAWC,OAAOO,iBAAcF,KAEzC,CAACN,IARwB,EAUQS,mBAASP,GAVjB,mBAUrBQ,EAVqB,KAUTC,EAVS,KAyB5B,OAbAjD,qBAAU,WACR,IAAKsC,EACH,OAAO,EAGT,SAASY,IACPD,EAAcT,KAIhB,OADAD,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MACjD,CAACV,EAASF,IAENU,EDCIK,GACPC,EAAaC,iBAAO,MAFa,EAIfR,qBAJe,mBAIlCS,EAJkC,KAI3BC,EAJ2B,KAOvCzD,qBAAU,WACR,GAAGwD,GACEF,EAAWI,QAAS,CACrB,IAAMC,EAAeL,EAAWI,QAChCE,YAAW,WACTJ,EAAMK,QAAQF,EAAYG,YAAaH,EAAYI,gBAClD,OAIN,CAAC1B,EAAMmB,IAMV,IAAMQ,EAAYnJ,MAAWA,KAAQoJ,gBAErC,IAAID,EACF,OAAO,8BAGT,IAAIpF,OAAOkD,KAAKpB,EAAeJ,kBAAkBnB,SAAWtE,KAAQoJ,gBAClE,OAAO,8BA9B8B,kBAiCrBvD,EAAeH,kBAAkByD,GAjCZ,GAiChC3C,EAjCgC,KAiC7BC,EAjC6B,KAiC1BC,EAjC0B,KAmCjC0C,EAAkBvD,EAAeJ,iBAAiBe,GAAGC,GAAGC,GAExD2C,EAAU,CACdC,MAAO,CACLC,KAAM,KACNC,MAAO,CACHC,MAAO,OACPC,KAAM,kDAGZC,MAAO,CACHC,KAAM,WACNN,MAAO,CACLC,KAAM,QAERM,OAAQ,CACNC,UAAW,SAACC,GACV,OAvDavH,EAuDUuH,EAAMA,MAvDD/I,YAAOwB,EAAM,UAA7B,IAACA,KA2DrBwH,OAAQ,CACJC,SAAS,GAEbC,MAAO,CACLZ,MAAO,CACLC,KAAM,SAERM,OAAQ,CACNC,UAAW,SAACC,GACV,OAAOnI,qBAAkBZ,OAAO+I,EAAMA,UAI5CI,QAAS,CACPL,UAAW,SAAUM,EAAUC,EAAUC,GACvC,IAzEgB9H,EA0EhB,MAAM,GAAN,QA1EgBA,EAyEH+H,KACiBC,MAAMC,EA1ELzJ,YAAOwB,EAAM,cA0E5C,iBADa+H,KACuCG,OAAOC,KAA3D,mBAA0E/I,qBAAkBZ,OAD/EuJ,KAC2FC,MAAMI,MAGlHjC,MAAO,CACLkC,SAAU,KAEZC,QAAS,CACPb,SAAS,GAEXS,OAAQ,CAAC,CACPd,KAAM,OACNe,KAAO,MACPI,MAAM,EACNtB,MAAO,mBACPuB,MAAO5B,EAAgBzC,UAAU,IAAI1C,KAAI,SAAAiC,GAAO,MAAK,CAACA,EAAQG,SAAUH,EAAQtC,IAAI,SAEtF,CACEgG,KAAM,OACNe,KAAO,WACPlB,MAAO,OACPsB,MAAM,EACNC,MAAO5B,EAAgBzC,UAAU,IAAI1C,KAAI,SAAAiC,GAAO,MAAK,CAACA,EAAQG,UAAYH,EAAQrC,IAAIqC,EAAQtC,KAAK,EAAG,SAExG,CACEgG,KAAM,OACNe,KAAO,MACPlB,MAAO,oBACPsB,MAAM,EACNC,MAAO5B,EAAgBzC,UAAU,IAAI1C,KAAI,SAAAiC,GAAO,MAAK,CAACA,EAAQG,SAAUH,EAAQrC,IAAI,WAIxF,OACE,yBAAKzC,UAAWC,IAAO4J,kBACrB,kBAAC,EAAD,KACE,8CAEF,yBAAK7J,UAAWC,IAAO6J,aACrB,6BACE,4BAAMrF,EAAeJ,iBAAmB2D,EAAgBQ,KAAKuB,OAAO,GAAGC,cAAgBhC,EAAgBQ,KAAKyB,MAAM,GAAK,aAAevK,wBAAasI,EAAgB1H,cAAgB,oBAAsB,IAAIgB,KAAK0G,EAAgBkC,cAAchI,mBAAmB,SAAW,IAC9Q,4BAAKC,KAAKC,MAAMV,EAAY,IAAIJ,KAAQ,IAAIA,KAAK0G,EAAgBkC,gBAAjE,eAEF,6BACE,+BACE,+BACE,4BACE,wBAAIlK,UAAWC,IAAOkK,SAAtB,OACA,wBAAInK,UAAWC,IAAOkK,SAAU3J,qBAAkBZ,OAAOoI,EAAgBzC,SAAS,GAAG/C,IAAI,OAE3F,4BACE,wBAAIxC,UAAWC,IAAOmK,cAAtB,YACA,wBAAIpK,UAAWC,IAAOmK,cAAe5J,qBAAkBZ,QAAQoI,EAAgBzC,SAAS,GAAG/C,IAAI,IAAMwF,EAAgBzC,SAAS,GAAG9C,IAAI,KAAO,KAE9I,4BACE,wBAAIzC,UAAWC,IAAOoK,SAAtB,OACA,wBAAIrK,UAAWC,IAAOoK,SAAUrC,EAAgBzC,SAAS,GAAG9C,IAAMjC,qBAAkBZ,OAAOoI,EAAgBzC,SAAS,GAAG9C,IAAI,KAAO,SAEpI,4BACE,wBAAIzC,UAAWC,IAAOqK,QAAtB,MACA,wBAAItK,UAAWC,IAAOqK,QAAStC,EAAgBuC,cAAgB7K,wBAAqD,IAAxC8K,SAASxC,EAAgBuC,gBAAsB,aAMrI,yBAAKE,IAAKpD,EAAYe,MAAO,CAACsC,KAAM,OAAQC,SAAU,SAAUC,SAAU,aACxE,kBAAC,KAAD,CACEC,WAAY1E,IACZ8B,QAASA,EACT6C,kBAAkB,EAClBC,eAAgB,CAAE3C,MAAO,CAAExB,OAAQ,SACnCoE,SAAU,SAACzD,GA3HjBC,EA2H2DD,YExJhD0D,OAXf,WACE,OACE,kBAAC,IAAD,CAAUjL,UAAWC,IAAOgL,KAC1B,kBAAC,IAAD,CAAUxG,eAAgBA,EAAgB7F,QAASA,MACjD,kBAAC,EAAD,MACA,kBAAC,GAAD,SCHYsM,QACW,cAA7B5E,OAAO6E,SAASC,UAEe,UAA7B9E,OAAO6E,SAASC,UAEhB9E,OAAO6E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3H,MAAK,SAAA4H,GACJA,EAAaC,gBAEdrH,OAAM,SAAAsH,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.23205b99.chunk.js","sourcesContent":["import { observable } from 'mobx';\n\nexport class UIStore {\n    @observable focusedContract: number | null = null;\n}\n\nexport default new UIStore();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardWrapper\":\"OptionsBoard_boardWrapper___Fzvk\",\"OptionsBoard\":\"OptionsBoard_OptionsBoard__38SjU\",\"tableWrapper\":\"OptionsBoard_tableWrapper__2Hopj\",\"bitcoinPrice\":\"OptionsBoard_bitcoinPrice__cXNm8\",\"dateHeader\":\"OptionsBoard_dateHeader__1RcC2\",\"rowDate\":\"OptionsBoard_rowDate__1un0o\",\"bidAskColumnHeader\":\"OptionsBoard_bidAskColumnHeader__2l9SX\",\"oiHeader\":\"OptionsBoard_oiHeader__3nlwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OptionsBoardTableBody\":\"OptionsBoardTableBody_OptionsBoardTableBody__2fbOI\",\"dateHeader\":\"OptionsBoardTableBody_dateHeader__aFxLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OptionsBoardTableHead\":\"OptionsBoardTableHead_OptionsBoardTableHead__11JQ8\",\"sticky\":\"OptionsBoardTableHead_sticky__IHD1D\",\"strikeHeader\":\"OptionsBoardTableHead_strikeHeader__AnYa5\",\"oiHeader\":\"OptionsBoardTableHead_oiHeader__1aXGR\"};","import React, { lazy, Suspense } from 'react';\n\nconst LazyCurrencyLabel = lazy(() => import('./CurrencyLabel'));\n\nexport interface CurrencyLabelProps {\n  price?: number,\n  className?: string,\n  children?: React.ReactNode;\n}\n\nconst CurrencyLabel = (props: JSX.IntrinsicAttributes & CurrencyLabelProps) => (\n  <Suspense fallback={null}>\n    <LazyCurrencyLabel {...props} />\n  </Suspense>\n);\n\nexport default CurrencyLabel;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"strikePrice\":\"OptionRow_strikePrice__15Wfq\"};","import React, { lazy, Suspense } from 'react';\nimport { Contract } from '../OptionsBoard/OptionsBoard';\n\nconst LazyContractCell = lazy(() => import('./ContractCell'));\n\nexport interface ContractCellProps { children?: React.ReactNode; contract: Contract, flipOI?: boolean }\n\nconst ContractCell = (props: JSX.IntrinsicAttributes & ContractCellProps) => (\n  <Suspense fallback={null}>\n    <LazyContractCell {...props} />\n  </Suspense>\n);\n\nexport default ContractCell;\n","import React from 'react';\nimport { OptionRowProps } from './OptionRow.lazy';\nimport styles from './OptionRow.module.css';\nimport ContractCell from '../ContractCell/ContractCell.lazy';\n\nconst strikeFormatter = new Intl.NumberFormat('en-US');\n\nexport function formatStrike(num: number): string {\n  return strikeFormatter.format(num/100)\n}\n\nconst OptionRow: React.FC<OptionRowProps> = ({put, call}) => (\n  <tr className={styles.OptionRow} key={put.id}>\n    <ContractCell key={1} contract={put} />\n    <td className={styles.strikePrice}>{formatStrike(put.strike_price)}</td>\n    <ContractCell key={2} contract={call} flipOI={true} />\n  </tr>\n);\n\nexport default OptionRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StrikePriceChart\":\"StrikePriceChart_StrikePriceChart__3zYBZ\",\"chartWrapper\":\"StrikePriceChart_chartWrapper__qT1C0\",\"chartDetail\":\"StrikePriceChart_chartDetail__2Nt6K\",\"cellAsk\":\"StrikePriceChart_cellAsk__3KYNR\",\"cellMidpoint\":\"StrikePriceChart_cellMidpoint__1M7VQ\",\"cellBid\":\"StrikePriceChart_cellBid__hzlMa\",\"cellOI\":\"StrikePriceChart_cellOI__73SGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"App_h1__26v8a\",\"h2\":\"App_h2__2_lG-\",\"h3\":\"App_h3__nHoM5\",\"h4\":\"App_h4__3RQAA\",\"h5\":\"App_h5__2MPAr\",\"h6\":\"App_h6__WS_ML\",\"App\":\"App_App__16ZpL\"};","import React from 'react';\nimport { CurrencyLabelProps } from './CurrencyLabel.lazy';\n\nexport const currencyFormatter = new Intl.NumberFormat('en-US', {\n  minimumFractionDigits: 2,\n})\n\nfunction formatCurrency(num: Number): string {\n  return currencyFormatter.format(num.toFixed(2) as unknown as number);\n}\n\nconst CurrencyLabel: React.FC<CurrencyLabelProps> = (props) => {\n  let content;\n\n  if(props.price) {\n    content = formatCurrency(props.price/100);\n  }\n  if(props.children) {\n    content = props.children;\n  }\n\n  return (\n    <span className={props.className}>{content || '-'}</span>\n  )\n};\n\nexport default React.memo(CurrencyLabel);\n","import React, { lazy, Suspense } from 'react';\nimport { Contract } from '../OptionsBoard/OptionsBoard';\n\nconst LazyOptionRow = lazy(() => import('./OptionRow'));\n\nexport interface OptionRowProps {\n  children?: React.ReactNode;\n  put: Contract;\n  call: Contract;\n}\n\nconst OptionRow = (props: JSX.IntrinsicAttributes & OptionRowProps) => (\n  <Suspense fallback={null}>\n    <LazyOptionRow {...props} />\n  </Suspense>\n);\n\nexport default OptionRow;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyOptionsBoardPriceRow = lazy(() => import('./OptionsBoardPriceRow'));\n\nconst OptionsBoardPriceRow = (props: JSX.IntrinsicAttributes & { bitcoinPrice: number, children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyOptionsBoardPriceRow {...props} />\n  </Suspense>\n);\n\nexport default OptionsBoardPriceRow;\n","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './OptionsBoardTableBody.module.css';\nimport OptionRow from '../OptionRow/OptionRow.lazy';\nimport { OptionsBoardTableBodyProps } from './OptionsBoardTableBody.lazy';\nimport OptionsBoardPriceRow from '../OptionsBoardPriceRow/OptionsBoardPriceRow.lazy';\n\nfunction treatAsUTC(date: Date): Date {\n  var result = new Date(date);\n  result.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n  return result;\n}\n\nexport function daysBetween(startDate: Date, endDate: Date):number {\n  var millisecondsPerDay = 24 * 60 * 60 * 1000;\n  return ((treatAsUTC(endDate) as unknown as number) - (treatAsUTC(startDate) as unknown as number)) / millisecondsPerDay;\n}\n\nconst OptionsBoardDateRow: React.FC<{date: string}> = React.memo((props) => {\n  return (\n    <tr className={classnames(styles.rowDate, styles.dateHeader)}>\n      <td colSpan={7}>\n        <div>\n        <span><strong>{new Date(props.date).toLocaleDateString(\"en-US\")}</strong></span> - <span>{Math.round(daysBetween(new Date(), new Date(props.date)))} days left</span>\n        </div>\n      </td>\n    </tr>\n  )\n})\n\nconst OptionsBoardTableBody:React.FC<OptionsBoardTableBodyProps> = (props) => {\n  \n  const bitcoinPrice = (props.bitcoin.ask + props.bitcoin.bid)/2;\n  \n  \n  return (\n    <tbody className={styles.OptionsBoardTableBody}>\n      {props.contracts && Object.entries(props.contracts).map(([date, dateContracts]) => {\n      const contractRows = dateContracts.map(([put, call], index) => (\n        <React.Fragment key={put.id}>\n          {\n            ((index > 0\n            && (props.bitcoin.ask && props.bitcoin.bid)\n            && put.strike_price > bitcoinPrice\n            && dateContracts[index-1][0].strike_price < bitcoinPrice )\n            ||\n            (index === 0 && put.strike_price > bitcoinPrice))\n            && (props.bitcoin.ask && props.bitcoin.bid) && <OptionsBoardPriceRow key={date} bitcoinPrice={bitcoinPrice} />\n          }\n          <OptionRow key={put.id} {...{put, call}} />\n          {\n            (index === dateContracts.length && put.strike_price < bitcoinPrice)\n              && <OptionsBoardPriceRow key={date} bitcoinPrice={bitcoinPrice} />\n          }\n        </React.Fragment>\n      )\n    );\n\n    return (<React.Fragment key={date}>\n        <OptionsBoardDateRow date={date} />\n        {contractRows}\n      </React.Fragment>)\n  })}\n    </tbody>\n  )\n};\nexport default OptionsBoardTableBody;\n","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './OptionsBoardTableHead.module.css';\n\nconst OptionsBoardTableHead: React.FC = () => {\n  \n  return (\n    <thead className={classnames({\n      [styles.OptionsBoardTableHead]: true,\n      [styles.columnLabels]: true,\n        [styles.sticky]: true,\n      })}>\n      <tr>\n        <th className={styles.oiHeader}><span>OI</span></th>\n        <th className={styles.bidAskColumnHeader}>Bid</th>\n        <th className={styles.bidAskColumnHeader}>Ask</th>\n        <th className={styles.strikeHeader}>Strike</th>\n        <th className={styles.bidAskColumnHeader}>Bid</th>\n        <th className={styles.bidAskColumnHeader}>Ask</th>\n        <th className={styles.oiHeader}><span>OI</span></th>\n      </tr>\n    </thead>\n  )\n};\n\nexport default  React.memo(OptionsBoardTableHead);\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyHeader = lazy(() => import('./Header'));\n\nconst Header = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyHeader {...props} />\n  </Suspense>\n);\n\nexport default Header;\n","import { ContractTable, TableLookup, Dictionary, Contract } from './../components/OptionsBoard/OptionsBoard';\n\nimport { observable } from 'mobx';\n\nexport class ContractsStore {\n    @observable optionsContracts: ContractTable = {};\n    @observable optionsDictionary: Dictionary<TableLookup> = {};\n    @observable nextDayContracts: Dictionary<Contract> = {};\n    @observable activeNextDayContract: Contract | null = null;\n}\n\nexport default new ContractsStore();","import React, { useMemo, useEffect } from 'react';\nimport styles from './OptionsBoard.module.css';\n\n\nimport io from 'socket.io-client';\nimport CurrencyLabel from '../CurrencyLabel/CurrencyLabel.lazy';\nimport OptionsBoardTableBody from '../OptionsBoardTableBody/OptionsBoardTableBody';\nimport OptionsBoardTableHead from '../OptionsBoardTableHead/OptionsBoardTableHead';\nimport Header from '../Header/Header.lazy';\nimport { OptionsBoardProps } from './OptionsBoard.lazy';\nimport ContractsStore from '../../stores/ContractsStore';\nimport { observer, inject } from 'mobx-react';\n\nconst socket = io('');\n\nexport interface Booktop {\n  contract_id: number;\n  bid: number;\n  clock: number;\n  ask: number;\n  contract_type: string;\n  datetime: number;\n}\n\nexport interface ContractTable {\n  [key: string]: [\n    [Contract, Contract]\n  ];\n}\n\nexport interface Contract {\n  id: number;\n  name: string;\n  booktops: Booktop[];\n  label: string;\n  underlying_asset: string;\n  collateral_asset: string;\n  active: string;\n  type: string;\n  strike_price: number;\n  min_increment: string;\n  date_live: string;\n  date_expires: string;\n  date_exercise: string;\n  derivative_type: string;\n  open_interest: string;\n  is_one_day: string;\n}\n\nexport type TableLookup = [\n  string,\n  number,\n  number\n]\n\nexport interface Dictionary<T> {\n  [Key: string]: T;\n}\nconst OptionsBoard: React.FC<OptionsBoardProps> = (props) => {\n\n  useEffect(() => {\n    fetch(`https://lxboard.herokuapp.com/api/?after_ts=${new Date().toISOString()}`)\n        .then((resp) => resp.json())\n        .then(({optionsContracts, optionsDictionary, nextDayContracts, activeNextDayContract}) => {\n            ContractsStore.optionsContracts = optionsContracts;\n            ContractsStore.optionsDictionary = optionsDictionary;\n            ContractsStore.nextDayContracts = nextDayContracts;\n            ContractsStore.activeNextDayContract = activeNextDayContract;\n            \n        }).catch(err => {\n    });\n  }, [])\n\n  useEffect(() => {\n    \n    socket.on('message', (payload: string) => {\n\n      const booktop = JSON.parse(payload) as Booktop;\n\n      if(!ContractsStore.optionsDictionary || !ContractsStore.optionsContracts) {\n        return;\n      }\n\n      booktop.datetime = Date.now();\n\n      if(ContractsStore.optionsContracts && ContractsStore.optionsDictionary[booktop.contract_id]) {\n        const [a, b, c] = ContractsStore.optionsDictionary[booktop.contract_id];      \n        ContractsStore.optionsContracts[a][b][c].booktops.unshift(booktop);\n      }\n      \n      if(ContractsStore.activeNextDayContract && ContractsStore.activeNextDayContract && ContractsStore.activeNextDayContract.id === booktop.contract_id){\n  \n        ContractsStore.activeNextDayContract.booktops.unshift(booktop);\n      }\n    });\n\n    return () => {\n      socket.emit('disconnect');\n    }\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  const bitcoinHeader = useMemo(() => {\n    return (\n      <Header>\n        <h3>Trade Bitcoin</h3>\n      </Header>\n      )\n  }, [])\n  \n\n  const putCallHeader = useMemo(() => {\n    return (\n      <Header>\n        <h3>Call Options</h3>\n        <h3>Put Options</h3>\n      </Header>\n      )\n  }, [])\n  \n  return ContractsStore && ContractsStore.activeNextDayContract && ContractsStore.optionsContracts && Object.keys(ContractsStore.optionsContracts).length ? <div className={styles.boardWrapper}>\n    <div className={styles.OptionsBoard} data-testid=\"OptionsBoard\">\n      {bitcoinHeader}\n      <div className={styles.bitcoinPrice}>\n        <CurrencyLabel price={(ContractsStore.activeNextDayContract && ContractsStore.activeNextDayContract.booktops[0].bid) || 0} /> / <CurrencyLabel price={(ContractsStore.activeNextDayContract && ContractsStore.activeNextDayContract.booktops[0].ask) || 0} />\n      </div>\n      {putCallHeader}\n      <div className={styles.tableWrapper}>\n        <table>\n          <OptionsBoardTableHead />\n          {Object.keys(ContractsStore.optionsContracts).length && <OptionsBoardTableBody contracts={ContractsStore.optionsContracts} bitcoin={ContractsStore.activeNextDayContract.booktops[0]} />}\n        </table>\n      </div>\n    </div>\n  </div> : <div></div>}\n\nexport default inject('ContractsStore')(observer(OptionsBoard));","import React, { useEffect, useRef, useState } from 'react';\nimport styles from './StrikePriceChart.module.css';\nimport Highcharts from 'highcharts'\nimport { format } from 'date-fns';\n\nimport HighchartsReact from 'highcharts-react-official'\nimport { useWindowSize } from '../../hooks/useWindowResize';\nimport Header from '../Header/Header.lazy';\nimport { inject, observer } from 'mobx-react';\nimport UIStore from '../../stores/UIStore';\nimport ContractsStore from '../../stores/ContractsStore';\nimport { currencyFormatter } from '../CurrencyLabel/CurrencyLabel';\n\nimport DarkUnica from 'highcharts/themes/avocado';\nimport { formatStrike } from '../OptionRow/OptionRow';\nimport { daysBetween } from '../OptionsBoardTableBody/OptionsBoardTableBody';\n\nDarkUnica(Highcharts);\n\n\ninterface ChartResponse {\n  current: {\n    container: any\n    chart: any\n  }\n}\n\nconst formatDateShort = (date: Date) => format(date, 'h:mm a');\nconst formatDateLong = (date: Date) => format(date, 'h:mm:ss a');\n\nconst StrikePriceChart: React.FC = () => {\n  const size = useWindowSize();\n  const wrapperRef = useRef(null);\n\n  let [chart, setChart] = useState<any>();\n  \n  \n  useEffect(() => {\n    if(chart) {\n      if(wrapperRef.current) {\n        const wrapperSize = (wrapperRef.current as unknown as HTMLElement);\n        setTimeout(() => {\n          chart.setSize(wrapperSize.scrollWidth, wrapperSize.scrollHeight);\n        }, 20)\n      }\n      \n    }\n  }, [size, chart])\n  \n  function setChartInstance(ref: any) {\n    setChart(ref);\n  }\n\n  const focusedId = UIStore && UIStore.focusedContract;\n\n  if(!focusedId) {\n    return <div></div>\n  }\n  \n  if(!Object.keys(ContractsStore.optionsContracts).length || !UIStore.focusedContract) {\n    return <div></div>\n  }\n  \n  const [a, b, c] = ContractsStore.optionsDictionary[focusedId];\n\n  const focusedContract = ContractsStore.optionsContracts[a][b][c]\n\n  const options = {\n    title: {\n      text: null,\n      style: {\n          color: '#000',\n          font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n      }\n    },\n    xAxis: {\n        type: 'datetime',\n        title: {\n          text: 'Time'\n        },\n        labels: {\n          formatter: (value : any) => {\n            return formatDateShort(value.value)\n          }\n        }\n    },\n    legend: {\n        enabled: true\n    },\n    yAxis: {\n      title: {\n        text: 'Price',\n      },\n      labels: {\n        formatter: (value : any) => {\n          return currencyFormatter.format(value.value)\n        }\n      }\n    },\n    tooltip: {\n      formatter: function (a1 : any, a2 : any, a3 : any) {\n        const that = this as any;\n        return `${formatDateLong(that.point.x)}<br />${that.series.name} Price: ${currencyFormatter.format(that.point.y)}`\n      }\n    },\n    chart: {\n      zoomType: 'x'\n    },\n    credits: {\n      enabled: false\n    },\n    series: [{\n      type: 'line',\n      name : 'Ask',\n      step: true,\n      color: 'rgb(5, 179, 227)',\n      data: (focusedContract.booktops||[]).map(booktop => ([booktop.datetime, booktop.ask/100])),\n    },\n    {\n      type: 'line',\n      name : 'Midpoint',\n      color: 'grey',\n      step: true,\n      data: (focusedContract.booktops||[]).map(booktop => ([booktop.datetime, ((booktop.bid+booktop.ask)/2)/100])),\n    },\n    {\n      type: 'line',\n      name : 'Bid',\n      color: 'rgb(53, 114, 158)',\n      step: true,\n      data: (focusedContract.booktops||[]).map(booktop => ([booktop.datetime, booktop.bid/100])),\n    }]\n  }\n\n  return (\n    <div className={styles.StrikePriceChart}>\n      <Header>\n        <h3>Strike Detail</h3>\n      </Header>\n      <div className={styles.chartDetail}>\n        <div>\n          <h3>{ ContractsStore.optionsContracts ? focusedContract.type.charAt(0).toUpperCase() + focusedContract.type.slice(1) + ' Option - ' + formatStrike(focusedContract.strike_price) + ' Strike Price on ' + new Date(focusedContract.date_expires).toLocaleDateString('en-us') : ''}</h3>\n          <h4>{Math.round(daysBetween(new Date(), new Date(focusedContract.date_expires)))} days left</h4>\n        </div>\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                <td className={styles.cellAsk}>Ask</td>\n                <td className={styles.cellAsk}>{currencyFormatter.format(focusedContract.booktops[0].ask/100)}</td>\n              </tr>\n              <tr>\n                <td className={styles.cellMidpoint}>Midpoint</td>\n                <td className={styles.cellMidpoint}>{currencyFormatter.format((focusedContract.booktops[0].ask/100 + focusedContract.booktops[0].bid/100) / 2)}</td>\n              </tr>\n              <tr>\n                <td className={styles.cellBid}>Bid</td>\n                <td className={styles.cellBid}>{focusedContract.booktops[0].bid ? currencyFormatter.format(focusedContract.booktops[0].bid/100) : 'None'}</td>\n              </tr>\n              <tr>\n                <td className={styles.cellOI}>OI</td>\n                <td className={styles.cellOI}>{focusedContract.open_interest ? formatStrike(parseInt(focusedContract.open_interest)*100) : 'None'}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div ref={wrapperRef} style={{flex: 'auto', overflow: 'hidden', position: 'relative'}}>\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n          allowChartUpdate={true}\n          containerProps={{ style: { height: \"100%\" } }}\n          callback={(chart: ChartResponse) => setChartInstance(chart)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default inject('UIStore', 'ContractsStore')(observer(StrikePriceChart));","import { useEffect, useState } from \"react\";\nimport { useCallback } from \"react\";\n\n\n// Hook\nexport function useWindowSize() {\n    const isClient = typeof window === 'object';\n  \n    const getSize = useCallback(() => {\n      return {\n        width: isClient ? window.innerWidth : undefined,\n        height: isClient ? window.innerHeight : undefined\n      };\n    }, [isClient])\n  \n    const [windowSize, setWindowSize] = useState(getSize);\n  \n    useEffect(() => {\n      if (!isClient) {\n        return false;\n      }\n      \n      function handleResize() {\n        setWindowSize(getSize());\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n  \n    return windowSize;\n  }","import React from 'react';\nimport Div100vh from 'react-div-100vh';\n\nimport styles from './App.module.css';\nimport OptionsBoard from './components/OptionsBoard/OptionsBoard';\nimport StrikePriceChart from './components/StrikePriceChart/StrikePriceChart';\nimport ContractsStore from './stores/ContractsStore';\nimport { Provider } from 'mobx-react';\nimport UIStore from './stores/UIStore';\n\nfunction App() {\n  return (\n    <Div100vh className={styles.App}>\n      <Provider ContractsStore={ContractsStore} UIStore={UIStore}>\n        <OptionsBoard />\n        <StrikePriceChart />\n      </Provider>\n    </Div100vh>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}